{"version":3,"sources":["components/RefineSearch.js","components/AdvancedSearch.js","components/Recipes.js","components/Spinner.js","components/MainSearch.js","App.js","index.js"],"names":["RefineSearch","search","setURL","setSearch","app_id","credentials","app_key","useState","diet","setDiet","calories","setCalories","healthVegetarian","healtPeanutFree","healtAlcoholFree","healtTreeNutFree","health","setHealth","className","id","type","name","value","checked","onChange","event","target","htmlFor","onClick","dietSearch","caloriesSearch","vegarianSearch","peanutFreeSearch","alcoholFreeSearch","treeNutFreeSearch","healtSearch","advancedSearch","advancedURL","swal","title","text","icon","button","dangerMode","closeOnClickOutside","AdvancedSearch","data-toggle","data-target","aria-expanded","aria-controls","Recipes","hits","map","element","key","recipe","url","label","src","image","alt","Math","round","ingredientLines","ingredient","index","Spinner","MainSearch","URL","setHits","loading","setLoading","useEffect","axios","get","then","response","data","length","catch","href","aria-label","placeholder","trim","simpleURL","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5a6e3e3b.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport swal from 'sweetalert';\r\nimport credentials from '../credentials';\r\n\r\nconst RefineSearch = ({ search, setSearch, setURL }) => {\r\n\r\n    const { app_id, app_key } = credentials;\r\n    const [diet, setDiet] = useState(null);\r\n    const [calories, setCalories] = useState(null);\r\n    const [health, setHealth] = useState({ healthVegetarian: false, healtPeanutFree: false, healtAlcoholFree: false, healtTreeNutFree: false });\r\n\r\n    const clearFilters = () => {\r\n        setDiet(null);\r\n        setCalories(null);\r\n        setHealth({ healthVegetarian: false, healtPeanutFree: false, healtAlcoholFree: false, healtTreeNutFree: false });\r\n    }\r\n\r\n    const handleClick = () => {\r\n        if (search) {\r\n            const dietSearch = diet ? `&diet=${diet}` : '';\r\n            const caloriesSearch = calories ? `&calories=${calories}` : '';\r\n            const vegarianSearch = health.healthVegetarian ? `&health=vegetarian` : '';\r\n            const peanutFreeSearch = health.healtPeanutFree ? `&health=peanut-free` : '';\r\n            const alcoholFreeSearch = health.healtAlcoholFree ? `&health=alcohol-free` : '';\r\n            const treeNutFreeSearch = health.healtTreeNutFree ? `&health=tree-nut-free` : '';\r\n            const healtSearch = `${vegarianSearch}${peanutFreeSearch}${alcoholFreeSearch}${treeNutFreeSearch}`;\r\n            const advancedSearch = `q=${search}&app_id=${app_id}&app_key=${app_key}${dietSearch}${caloriesSearch}${healtSearch}`;\r\n            const advancedURL = `https://api.edamam.com/search?${advancedSearch}`;\r\n            setURL(advancedURL);\r\n        } else {\r\n            swal({\r\n                title: \"Oops!, something went wrong\",\r\n                text: \"You must enter your search\",\r\n                icon: \"error\",\r\n                button: \"I get it!\",\r\n                dangerMode: true,\r\n                closeOnClickOutside: false\r\n            });\r\n            setURL(null);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"mx-auto\">\r\n                <div className=\"card border-danger mb-3\">\r\n                    <div className=\"card-header bg-danger text-white\">Diet</div>\r\n                    <div className=\"card-body\">\r\n                        <div className=\"form-group\">\r\n                            <div className=\"custom-control custom-radio my-1\">\r\n                                <input className=\"custom-control-input\" id=\"dietLowFat\" type=\"radio\" name=\"diet\" value=\"low-fat\" checked={diet === \"low-fat\"} onChange={event => setDiet(event.target.value)} />\r\n                                <label className=\"custom-control-label\" htmlFor=\"dietLowFat\">Low Fat</label>\r\n                            </div>\r\n                            <div className=\"custom-control custom-radio\">\r\n                                <input className=\"custom-control-input\" id=\"dietBalanced\" type=\"radio\" name=\"diet\" value=\"balanced\" checked={diet === \"balanced\"} onChange={event => setDiet(event.target.value)} />\r\n                                <label className=\"custom-control-label\" htmlFor=\"dietBalanced\">Balanced</label>\r\n                            </div>\r\n                            <div className=\"custom-control custom-radio my-1\">\r\n                                <input className=\"custom-control-input\" id=\"dietLowCarb\" type=\"radio\" name=\"diet\" value=\"low-carb\" checked={diet === \"low-carb\"} onChange={event => setDiet(event.target.value)} />\r\n                                <label className=\"custom-control-label\" htmlFor=\"dietLowCarb\">Low Carb</label>\r\n                            </div>\r\n                            <div className=\"custom-control custom-radio\">\r\n                                <input className=\"custom-control-input\" id=\"dietHighProtein\" type=\"radio\" name=\"diet\" value=\"high-protein\" checked={diet === \"high-protein\"} onChange={event => setDiet(event.target.value)} />\r\n                                <label className=\"custom-control-label\" htmlFor=\"dietHighProtein\">High Protein</label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\" mx-auto\">\r\n                <div className=\"card border-warning mb-3\">\r\n                    <div className=\"card-header bg-warning text-white\">Calories</div>\r\n                    <div className=\"card-body\">\r\n                        <div className=\"form-group\">\r\n                            <div className=\"custom-control custom-radio\">\r\n                                <input className=\"custom-control-input\" id=\"caloriesL200\" type=\"radio\" name=\"calories\" value=\"0-200\" checked={calories === \"0-200\"} onChange={event => setCalories(event.target.value)} />\r\n                                <label className=\"custom-control-label\" htmlFor=\"caloriesL200\">Under 200 cal/serv</label>\r\n                            </div>\r\n                            <div className=\"custom-control custom-radio my-1\">\r\n                                <input className=\"custom-control-input\" id=\"caloriesG200L400\" type=\"radio\" name=\"calories\" value=\"200-400\" checked={calories === \"200-400\"} onChange={event => setCalories(event.target.value)} />\r\n                                <label className=\"custom-control-label\" htmlFor=\"caloriesG200L400\">200 - 400 cal/serv</label>\r\n                            </div>\r\n                            <div className=\"custom-control custom-radio my-1\">\r\n                                <input className=\"custom-control-input\" id=\"caloriesG400L600\" type=\"radio\" name=\"calories\" value=\"400-600\" checked={calories === \"400-600\"} onChange={event => setCalories(event.target.value)} />\r\n                                <label className=\"custom-control-label\" htmlFor=\"caloriesG400L600\">400 - 600 cal/serv</label>\r\n                            </div>\r\n                            <div className=\"custom-control custom-radio\">\r\n                                <input className=\"custom-control-input\" id=\"caloriesG600\" type=\"radio\" name=\"calories\" value=\"600-10000\" checked={calories === \"600-10000\"} onChange={event => setCalories(event.target.value)} />\r\n                                <label className=\"custom-control-label\" htmlFor=\"caloriesG600\">Over 600 cal/serv</label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\" mx-auto\">\r\n                <div className=\"card border-info mb-3\">\r\n                    <div className=\"card-header bg-info text-white\">Health</div>\r\n                    <div className=\"card-body\">\r\n                        <div className=\"form-group\">\r\n                            <div className=\"custom-control custom-checkbox\">\r\n                                <input className=\"custom-control-input\" id=\"healthVegetarian\" type=\"checkbox\" name=\"health\" value=\"vegetarian\" checked={health.healthVegetarian === true} onChange={event => setHealth({ ...health, [event.target.id]: !health.healthVegetarian })} />\r\n                                <label className=\"custom-control-label\" htmlFor=\"healthVegetarian\">Vegetarian</label>\r\n                            </div>\r\n                            <div className=\"custom-control custom-checkbox my-1\">\r\n                                <input className=\"custom-control-input\" id=\"healtPeanutFree\" type=\"checkbox\" name=\"health\" value=\"peanut-free\" checked={health.healtPeanutFree === true} onChange={event => setHealth({ ...health, [event.target.id]: !health.healtPeanutFree })} />\r\n                                <label className=\"custom-control-label\" htmlFor=\"healtPeanutFree\">Peanut Free</label>\r\n                            </div>\r\n                            <div className=\"custom-control custom-checkbox my-1\">\r\n                                <input className=\"custom-control-input\" id=\"healtAlcoholFree\" type=\"checkbox\" name=\"health\" value=\"alcohol-free\" checked={health.healtAlcoholFree === true} onChange={event => setHealth({ ...health, [event.target.id]: !health.healtAlcoholFree })} />\r\n                                <label className=\"custom-control-label\" htmlFor=\"healtAlcoholFree\">Alcohol Free</label>\r\n                            </div>\r\n                            <div className=\"custom-control custom-checkbox\">\r\n                                <input className=\"custom-control-input\" id=\"healtTreeNutFree\" type=\"checkbox\" name=\"health\" value=\"tree-nut-free\" checked={health.healtTreeNutFree === true} onChange={event => setHealth({ ...health, [event.target.id]: !health.healtTreeNutFree })} />\r\n                                <label className=\"custom-control-label\" htmlFor=\"healtTreeNutFree\">Tree Nut Free</label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-12 mt-2\">\r\n                <button className=\"btn btn-outline-secondary float-left\" type=\"button\" onClick={clearFilters}>Clear Filters</button>\r\n                <button className=\"btn btn-outline-success float-right\" type=\"button\" onClick={handleClick}>Continue Search</button>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default RefineSearch;","import React from 'react';\r\nimport RefineSearch from './RefineSearch';\r\n\r\nconst AdvancedSearch = ({ search, setSearch, setURL }) => (\r\n    <div className=\"container text-center\">\r\n        <button\r\n            className=\"btn btn-primary mx-auto mt-4\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#collapseExample\"\r\n            aria-expanded=\"false\"\r\n            aria-controls=\"collapseExample\">\r\n            Advanced Search\r\n        </button>\r\n        <div className=\"collapse\" id=\"collapseExample\">\r\n            <div className=\"card card-body\">\r\n                <RefineSearch search={search} setSearch={setSearch} setURL={setURL} />\r\n            </div>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default AdvancedSearch;","import React from 'react';\r\n\r\nconst Recipes = ({ hits }) => {\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row mt-5\">\r\n                {hits.map(element =>\r\n                    <div className=\"col-md-4 mb-3\" key={element.recipe.url}>\r\n                        <div className=\"card border-primary\">\r\n                            <h3 className=\"card-header bg-primary\"><span className=\"text-white\">{element.recipe.label}</span></h3>\r\n                            <img className=\"card-img-top\" src={element.recipe.image} alt={`Imagen de ${element.recipe.label}`} />\r\n                            <div className=\"card-body\">\r\n                                <h4 className=\"text-warning\">Calories: {Math.round(element.recipe.calories)}</h4>\r\n                                <div className=\"mt-4\">\r\n                                    <ul>\r\n                                        {element.recipe.ingredientLines.map((ingredient, index) => <li key={index}>{ingredient}</li>)}\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Recipes;","import React from 'react';\r\nimport '../css/spinner.css';\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"sk-circle\">\r\n            <div className=\"sk-circle1 sk-child\"></div>\r\n            <div className=\"sk-circle2 sk-child\"></div>\r\n            <div className=\"sk-circle3 sk-child\"></div>\r\n            <div className=\"sk-circle4 sk-child\"></div>\r\n            <div className=\"sk-circle5 sk-child\"></div>\r\n            <div className=\"sk-circle6 sk-child\"></div>\r\n            <div className=\"sk-circle7 sk-child\"></div>\r\n            <div className=\"sk-circle8 sk-child\"></div>\r\n            <div className=\"sk-circle9 sk-child\"></div>\r\n            <div className=\"sk-circle10 sk-child\"></div>\r\n            <div className=\"sk-circle11 sk-child\"></div>\r\n            <div className=\"sk-circle12 sk-child\"></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Spinner;","import React, { useState, useEffect } from 'react';\r\nimport AdvancedSearch from './AdvancedSearch';\r\nimport Recipes from './Recipes';\r\nimport Spinner from './Spinner';\r\nimport credentials from '../credentials';\r\nimport swal from 'sweetalert';\r\nimport axios from 'axios';\r\n\r\nconst MainSearch = () => {\r\n\r\n    const { app_id, app_key } = credentials;\r\n    const [search, setSearch] = useState(null);\r\n    const [URL, setURL] = useState(null);\r\n    const [hits, setHits] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        (() => {\r\n            if (URL) {\r\n                setHits([]);\r\n                setLoading(true);\r\n                axios.get(URL)\r\n                    .then(response => {\r\n                        if (response.data.hits.length > 0) {\r\n                            setHits(response.data.hits);\r\n                            setLoading(false);\r\n                        } else {\r\n                            setHits([]);\r\n                            setLoading(false);\r\n                            swal({\r\n                                title: \"Oops!, we are sorry\",\r\n                                text: \"We can't find what you're looking for\",\r\n                                icon: \"warning\",\r\n                                button: \"I get it!\",\r\n                                closeOnClickOutside: false\r\n                            });\r\n                        }\r\n                    })\r\n                    .catch(() => {\r\n                        setLoading(false);\r\n                        swal({\r\n                            title: \"Oops!, something went wrong\",\r\n                            text: \"It is not possible to connect to the server\",\r\n                            icon: \"error\",\r\n                            button: \"I get it!\",\r\n                            dangerMode: true,\r\n                            closeOnClickOutside: false\r\n                        });\r\n                    })\r\n            }\r\n        })();\r\n    }, [URL]);\r\n\r\n    const handleClick = () => {\r\n        if (search) {\r\n            const simpleURL = `https://api.edamam.com/search?q=${search}&app_id=${app_id}&app_key=${app_key}`;\r\n            setURL(simpleURL);\r\n        } else {\r\n            swal({\r\n                title: \"Oops!, something went wrong\",\r\n                text: \"You must enter your search\",\r\n                icon: \"error\",\r\n                button: \"I get it!\",\r\n                dangerMode: true,\r\n                closeOnClickOutside: false\r\n            });\r\n            setURL(null);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                <a className=\"navbar-brand\" href=\"!#\">Recipe Search</a>\r\n                <button\r\n                    className=\"navbar-toggler\"\r\n                    type=\"button\"\r\n                    data-toggle=\"collapse\"\r\n                    data-target=\"#navbarColor02\"\r\n                    aria-controls=\"navbarColor02\"\r\n                    aria-expanded=\"false\"\r\n                    aria-label=\"Toggle navigation\"\r\n                >\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n\r\n                <div className=\"collapse navbar-collapse mr-5\" id=\"navbarColor02\">\r\n                    <form className=\"form-inline my-2 my-lg-0 mx-auto\">\r\n                        <input\r\n                            className=\"form-control mr-sm-2\"\r\n                            placeholder=\"Enter your search\"\r\n                            type=\"text\"\r\n                            onChange={event => setSearch(event.target.value.trim())}\r\n                        />\r\n                        <button className=\"btn btn-secondary my-2 my-sm-0\" type=\"button\" onClick={handleClick}>Search</button>\r\n                    </form>\r\n                </div>\r\n            </nav>\r\n            <AdvancedSearch search={search} setSearch={setSearch} setURL={setURL} />\r\n            {hits.length > 0 && <Recipes hits={hits} />}\r\n            {loading && <Spinner />}\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default MainSearch;","import React from 'react'\r\nimport MainSearch from './components/MainSearch';\r\n\r\nconst App = () => <MainSearch />\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}