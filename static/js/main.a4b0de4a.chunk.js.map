{"version":3,"sources":["components/RefineSearch.js","components/AdvancedSearch.js","components/Recipes.js","components/Spinner.js","components/MainSearch.js","App.js","index.js"],"names":["RefineSearch","useState","diet","setDiet","calories","setCalories","health","setHealth","console","log","className","id","type","name","value","checked","onChange","event","target","htmlFor","onClick","AdvancedSearch","search","data-toggle","data-target","aria-expanded","aria-controls","Recipes","hits","map","element","key","recipe","url","label","src","image","alt","Math","round","ingredientLines","ingredient","index","Spinner","MainSearch","app_id","credentials","app_key","setSearch","URL","setURL","setHits","loading","setLoading","useEffect","axios","get","then","response","data","length","swal","title","text","icon","button","closeOnClickOutside","catch","dangerMode","href","aria-label","placeholder","trim","simpleURL","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a4b0de4a.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst RefineSearch = () => {\r\n\r\n    const [diet, setDiet] = useState(null);\r\n    const [calories, setCalories] = useState(null);\r\n    const [health, setHealth] = useState([]);\r\n    console.log(diet, calories, health);\r\n\r\n    const clearFilters = () => {\r\n        setDiet(null);\r\n        setCalories(null);\r\n    }\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"mx-auto\">\r\n                <div className=\"card border-danger mb-3\">\r\n                    <div className=\"card-header bg-danger text-white\">Diet</div>\r\n                    <div className=\"card-body\">\r\n                        <div className=\"form-group\">\r\n                            <div className=\"custom-control custom-radio\">\r\n                                <input className=\"custom-control-input\" id=\"dietBalanced\" type=\"radio\" name=\"diet\" value=\"balanced\" checked={diet === \"balanced\"} onChange={event => setDiet(event.target.value)} />\r\n                                <label className=\"custom-control-label\" htmlFor=\"dietBalanced\">Balanced</label>\r\n                            </div>\r\n                            <div className=\"custom-control custom-radio my-1\">\r\n                                <input className=\"custom-control-input\" id=\"dietDairyFree\" type=\"radio\" name=\"diet\" value=\"dairy-free\" checked={diet === \"dairy-free\"} onChange={event => setDiet(event.target.value)} />\r\n                                <label className=\"custom-control-label\" htmlFor=\"dietDairyFree\">Dairy-Free</label>\r\n                            </div>\r\n                            <div className=\"custom-control custom-radio my-1\">\r\n                                <input className=\"custom-control-input\" id=\"dietGlutenFree\" type=\"radio\" name=\"diet\" value=\"gluten-free\" checked={diet === \"gluten-free\"} onChange={event => setDiet(event.target.value)} />\r\n                                <label className=\"custom-control-label\" htmlFor=\"dietGlutenFree\">Gluten-Free</label>\r\n                            </div>\r\n                            <div className=\"custom-control custom-radio\">\r\n                                <input className=\"custom-control-input\" id=\"dietHighProtein\" type=\"radio\" name=\"diet\" value=\"high-protein\" checked={diet === \"high-protein\"} onChange={event => setDiet(event.target.value)} />\r\n                                <label className=\"custom-control-label\" htmlFor=\"dietHighProtein\">High-Protein</label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\" mx-auto\">\r\n                <div className=\"card border-warning mb-3\">\r\n                    <div className=\"card-header bg-warning text-white\">Calories</div>\r\n                    <div className=\"card-body\">\r\n                        <div className=\"form-group\">\r\n                            <div className=\"custom-control custom-radio\">\r\n                                <input className=\"custom-control-input\" id=\"caloriesL200\" type=\"radio\" name=\"calories\" value=\"lte 200\" checked={calories === \"lte 200\"} onChange={event => setCalories(event.target.value)} />\r\n                                <label className=\"custom-control-label\" htmlFor=\"caloriesL200\">Under 200 cal/serv</label>\r\n                            </div>\r\n                            <div className=\"custom-control custom-radio my-1\">\r\n                                <input className=\"custom-control-input\" id=\"caloriesG200L400\" type=\"radio\" name=\"calories\" value=\"gte 200, lte 400\" checked={calories === \"gte 200, lte 400\"} onChange={event => setCalories(event.target.value)} />\r\n                                <label className=\"custom-control-label\" htmlFor=\"caloriesG200L400\">200 - 400 cal/serv</label>\r\n                            </div>\r\n                            <div className=\"custom-control custom-radio my-1\">\r\n                                <input className=\"custom-control-input\" id=\"caloriesG400L600\" type=\"radio\" name=\"calories\" value=\"gte 400, lte 600\" checked={calories === \"gte 400, lte 600\"} onChange={event => setCalories(event.target.value)} />\r\n                                <label className=\"custom-control-label\" htmlFor=\"caloriesG400L600\">400 - 600 cal/serv</label>\r\n                            </div>\r\n                            <div className=\"custom-control custom-radio\">\r\n                                <input className=\"custom-control-input\" id=\"caloriesG600\" type=\"radio\" name=\"calories\" value=\"gte 600\" checked={calories === \"gte 600\"} onChange={event => setCalories(event.target.value)} />\r\n                                <label className=\"custom-control-label\" htmlFor=\"caloriesG600\">Over 600 cal/serv</label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\" mx-auto\">\r\n                <div className=\"card border-info mb-3\">\r\n                    <div className=\"card-header bg-info text-white\">Health</div>\r\n                    <div className=\"card-body\">\r\n                        <div className=\"form-group\">\r\n                            <div className=\"custom-control custom-checkbox\">\r\n                                <input className=\"custom-control-input\" id=\"healthLowFat\" type=\"checkbox\" name=\"health\" value=\"low-fat\" onChange={event => setHealth([...health, event.target.value])} />\r\n                                <label className=\"custom-control-label\" htmlFor=\"healthLowFat\">Low-Fat</label>\r\n                            </div>\r\n                            <div className=\"custom-control custom-checkbox my-1\">\r\n                                <input className=\"custom-control-input\" id=\"healtLowCarb\" type=\"checkbox\" name=\"health\" value=\"low-carb\" />\r\n                                <label className=\"custom-control-label\" htmlFor=\"healtLowCarb\">Low-Carb</label>\r\n                            </div>\r\n                            <div className=\"custom-control custom-checkbox my-1\">\r\n                                <input className=\"custom-control-input\" id=\"healtHighFiber\" type=\"checkbox\" name=\"health\" value=\"high-fiber\" />\r\n                                <label className=\"custom-control-label\" htmlFor=\"healtHighFiber\">High-Fiber</label>\r\n                            </div>\r\n                            <div className=\"custom-control custom-checkbox\">\r\n                                <input className=\"custom-control-input\" id=\"healtHighProtein\" type=\"checkbox\" name=\"health\" value=\"high-protein\" />\r\n                                <label className=\"custom-control-label\" htmlFor=\"healtHighProtein\">High-Protein</label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-12 mt-2\">\r\n                <button className=\"btn btn-outline-secondary float-left\" type=\"button\" onClick={clearFilters}>Clear Filters</button>\r\n                <button className=\"btn btn-outline-success float-right\" type=\"button\">Continue Search</button>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default RefineSearch;","import React from 'react';\r\nimport RefineSearch from './RefineSearch';\r\n\r\nconst AdvancedSearch = ({ search }) => {\r\n    console.log(search)\r\n    return (\r\n        <div className=\"container text-center\">\r\n            <button\r\n                className=\"btn btn-primary mx-auto mt-4\"\r\n                type=\"button\"\r\n                data-toggle=\"collapse\"\r\n                data-target=\"#collapseExample\"\r\n                aria-expanded=\"false\"\r\n                aria-controls=\"collapseExample\">\r\n                Advanced Search\r\n            </button>\r\n            <div className=\"collapse\" id=\"collapseExample\">\r\n                <div className=\"card card-body\">\r\n                    <RefineSearch />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AdvancedSearch;","import React from 'react';\r\n\r\nconst Recipes = ({ hits }) => {\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row mt-5\">\r\n                {hits.map(element =>\r\n                    <div className=\"col-md-4 mb-3\" key={element.recipe.url}>\r\n                        <div className=\"card border-primary\">\r\n                            <h3 className=\"card-header bg-primary\"><span className=\"text-white\">{element.recipe.label}</span></h3>\r\n                            <img className=\"card-img-top\" src={element.recipe.image} alt={`Imagen de ${element.recipe.label}`} />\r\n                            <div className=\"card-body\">\r\n                                <h4 className=\"text-warning\">Calories: {Math.round(element.recipe.calories)}</h4>\r\n                                <div className=\"mt-4\">\r\n                                    <ul>\r\n                                        {element.recipe.ingredientLines.map((ingredient, index) => <li key={index}>{ingredient}</li>)}\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Recipes;","import React from 'react';\r\nimport '../css/spinner.css';\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"sk-circle\">\r\n            <div className=\"sk-circle1 sk-child\"></div>\r\n            <div className=\"sk-circle2 sk-child\"></div>\r\n            <div className=\"sk-circle3 sk-child\"></div>\r\n            <div className=\"sk-circle4 sk-child\"></div>\r\n            <div className=\"sk-circle5 sk-child\"></div>\r\n            <div className=\"sk-circle6 sk-child\"></div>\r\n            <div className=\"sk-circle7 sk-child\"></div>\r\n            <div className=\"sk-circle8 sk-child\"></div>\r\n            <div className=\"sk-circle9 sk-child\"></div>\r\n            <div className=\"sk-circle10 sk-child\"></div>\r\n            <div className=\"sk-circle11 sk-child\"></div>\r\n            <div className=\"sk-circle12 sk-child\"></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Spinner;","import React, { useState, useEffect } from 'react';\r\nimport AdvancedSearch from './AdvancedSearch';\r\nimport Recipes from './Recipes';\r\nimport Spinner from './Spinner';\r\nimport credentials from '../credentials';\r\nimport swal from 'sweetalert';\r\nimport axios from 'axios';\r\n\r\nconst MainSearch = () => {\r\n\r\n    const { app_id, app_key } = credentials;\r\n    const [search, setSearch] = useState(null);\r\n    const [URL, setURL] = useState(null);\r\n    const [hits, setHits] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        (() => {\r\n            if (URL) {\r\n                setHits([]);\r\n                setLoading(true);\r\n                axios.get(URL)\r\n                    .then(response => {\r\n                        if (response.data.hits.length > 0) {\r\n                            setHits(response.data.hits);\r\n                            setLoading(false);\r\n                        } else {\r\n                            setHits([]);\r\n                            setLoading(false);\r\n                            swal({\r\n                                title: \"Oops!, we are sorry\",\r\n                                text: \"We can't find what you're looking for\",\r\n                                icon: \"warning\",\r\n                                button: \"I get it!\",\r\n                                closeOnClickOutside: false\r\n                            });\r\n                        }\r\n                    })\r\n                    .catch(() => {\r\n                        setLoading(false);\r\n                        swal({\r\n                            title: \"Oops!, something went wrong\",\r\n                            text: \"It is not possible to connect to the server\",\r\n                            icon: \"error\",\r\n                            button: \"I get it!\",\r\n                            dangerMode: true,\r\n                            closeOnClickOutside: false\r\n                        });\r\n                    })\r\n            }\r\n        })();\r\n    }, [URL]);\r\n\r\n    const handleClick = () => {\r\n        if (search) {\r\n            const simpleURL = `https://api.edamam.com/search?q=${search}&app_id=${app_id}&app_key=${app_key}`;\r\n            setURL(simpleURL);\r\n        } else {\r\n            swal({\r\n                title: \"Oops!, something went wrong\",\r\n                text: \"You must enter your search\",\r\n                icon: \"error\",\r\n                button: \"I get it!\",\r\n                dangerMode: true,\r\n                closeOnClickOutside: false\r\n            });\r\n            setURL(null);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                <a className=\"navbar-brand\" href=\"!#\">Recipe Search</a>\r\n                <button\r\n                    className=\"navbar-toggler\"\r\n                    type=\"button\"\r\n                    data-toggle=\"collapse\"\r\n                    data-target=\"#navbarColor02\"\r\n                    aria-controls=\"navbarColor02\"\r\n                    aria-expanded=\"false\"\r\n                    aria-label=\"Toggle navigation\"\r\n                >\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n\r\n                <div className=\"collapse navbar-collapse mr-5\" id=\"navbarColor02\">\r\n                    <form className=\"form-inline my-2 my-lg-0 mx-auto\">\r\n                        <input\r\n                            className=\"form-control mr-sm-2\"\r\n                            placeholder=\"Enter your search\"\r\n                            type=\"text\"\r\n                            onChange={event => setSearch(event.target.value.trim())}\r\n                        />\r\n                        <button className=\"btn btn-secondary my-2 my-sm-0\" type=\"button\" onClick={handleClick}>Search</button>\r\n                    </form>\r\n                </div>\r\n            </nav>\r\n            <AdvancedSearch search={search} />\r\n            {hits.length > 0 && <Recipes hits={hits} />}\r\n            {loading && <Spinner />}\r\n\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default MainSearch;","import React from 'react'\r\nimport MainSearch from './components/MainSearch';\r\n\r\nconst App = () => <MainSearch />\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}